apiVersion: v1
kind: Secret
metadata:
  namespace: robot
  name: minio-secret
type: Opaque
stringData:
  root-user: "root-user"
  root-password: "root-password"
  minio-access-key: "minio-access-key"
  minio-secret-key: "key"
  minio_bucket_name: "minio_bucket_name"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deploy
  namespace: robot
  labels:
    app: minio-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio-deploy
  template:
    metadata:
      name: minio-deploy
      labels:
        app: minio-deploy
    spec:
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: minio-pvc
      containers:
        - name: minio
          image: minio/minio:RELEASE.2024-11-07T00-52-20Z
          args:
            - server
            - --console-address
            - ":9001"
            - "--address"
            - "0.0.0.0:9000"
            - "/storage"
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  key: root-user
                  name: minio-secret
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: root-password
                  name: minio-secret
          volumeMounts:
            - name: storage
              mountPath: "/storage"
          ports:
            - containerPort: 9000
            - containerPort: 9001

---
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: robot
  labels:
    run: minio-deploy
spec:
  type: NodePort
  ports:
    - port: 9000
      targetPort: 9000
      nodePort: 30333
      name: api
    - port: 9001
      targetPort: 9001
      nodePort: 30334
      name: console
  selector:
    app: minio-deploy
