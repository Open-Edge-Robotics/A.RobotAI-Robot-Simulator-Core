apiVersion: v1
kind: Secret
metadata:
  name: robot-secret
  namespace: robot
type: Opaque
stringData:
  db_url: "postgresql+asyncpg://agent_user:qwe1212qwe1212@postgres-service.robot.svc.cluster.local:5432/robot_db"
  minio_url: "minio-service.robot.svc.cluster.local:9000"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: robot-deploy
  namespace: robot
  labels:
    app: robot-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: robot-deploy
  template:
    metadata:
      name: robot-deploy
      labels:
        app: robot-deploy
    spec:
      containers:
        - name: robot-deploy
          image: pbc9236/robot:v0.0.134
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: robot-secret
                  key: db_url
            - name: MINIO_URL
              valueFrom:
                secretKeyRef:
                  name: robot-secret
                  key: minio_url
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-secret  # 주의: 이 시크릿도 new-namespace에 존재해야 함
                  key: minio-access-key
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-secret  # 주의: 이 시크릿도 new-namespace에 존재해야 함
                  key: minio-secret-key
            - name: MINIO_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  name: minio-secret  # 주의: 이 시크릿도 new-namespace에 존재해야 함
                  key: minio_bucket_name
            - name: API_STR
              value: /api
#          volumeMounts:
#            - mountPath: /root/.kube/config
#              name: kube-config
#              subPath: config

#      volumes:
#        - name: kube-config
#          configMap:
#            name: kube-config  # 주의: 이 ConfigMap도 new-namespace에 존재해야 함


---

apiVersion: v1
kind: Service
metadata:
  name: robot-service
  namespace: robot
spec:
  selector:
    app: robot-deploy
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
      nodePort: 30020  # 주의: NodePort는 클러스터 전체에서 고유해야 함
  type: NodePort
  externalTrafficPolicy: Cluster
